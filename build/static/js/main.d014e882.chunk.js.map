{"version":3,"sources":["math-lib-master/src/index.js","App.js","serviceWorker.js","index.js"],"names":["add","first","second","checkValidType","subtract","multiply","divide","Error","params","TypeError","buttonStyle","lcdStyle","App","props","state","operations","lastNumb","display","val","op","console","log","this","setState","parseFloat","lastOp","map","operation","span","colSpan","style","onClick","type","addOperation","clearOperations","calculateValue","src","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d014e882.chunk.js","sourcesContent":["export const add = (first, second) => {\n  checkValidType([first, second]);\n\n  return first + second;\n};\n\nexport const subtract = (first, second) => {\n  checkValidType([first, second]);\n\n  return first - second;\n};\n\nexport const multiply = (first, second) => {\n  checkValidType([first, second]);\n\n  return first * second;\n};\n\nexport const divide = (first, second) => {\n  checkValidType([first, second]);\n\n  if (second === 0) {\n    throw new Error(\"Cannot divide by zero\");\n  }\n\n  return first / second;\n};\n\nexport const squareRoot = first => {\n  checkValidType([first]);\n\n  if (first < 0) {\n    throw new Error(\"Cannot have square root of negative number\");\n  }\n\n  return Math.sqrt(first);\n};\n\nexport const exponent = (first, second) => {\n  checkValidType([first, second]);\n\n  return Math.pow(first, second);\n};\n\nexport const toDecimal = num => {\n  checkValidType([num]);\n\n  return parseInt(num, 10);\n};\n\nconst checkValidType = params => {\n  for (const param of params) {\n    if (typeof param !== \"number\") {\n      throw new TypeError(\"Argument is not a number\");\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport Button from 'antd/es/button';\nimport {Row, Col, Icon} from 'antd'\nimport {add,divide,multiply,subtract} from './math-lib-master/src/index'\nimport './App.css';\n\nconst buttonStyle = {'width':\"100%\"};\nconst lcdStyle = {\n  'border':'1px solid black',\n  'borderRadius':'10px',\n  'padding':'10px',\n  'fontSize':'25px',\n  'width':'200px',\n  'height':'50px',\n  'overflow':'hidden'\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      operations:[],\n      lastNumb:'0',\n      display:'0',\n\n    };\n  }\n\n  \n  addOperation(val, op) {\n    console.log(val);\n    console.log(\"op\");\n    this.setState({...this.state, display:parseFloat(val), lastNumb:'', operations:[...this.state.operations,[val, op] ]});\n    console.log(\n      this.state\n    );\n  }\n\n  clearOperations() {\n      this.setState({\n        operations:[],\n        lastNumb:'0',\n        display:'0',\n\n      });\n  }\n\n  calculateValue() {\n    console.log(\"Calculating Value!\");\n\n    let val = 0;\n    let lastOp = false;\n    this.state.operations.map(operation=>{\n console.log(operation);\n\n      if (!lastOp) {\n         lastOp = \"+\";\n       } \n\n\n        console.log(\"LAST: \"+lastOp);\n\n        switch (lastOp) {\n          case '+':\n            val = add(parseFloat(val), parseFloat(operation[0]));\n            break;\n          case '-':\n            console.log(\"subtracting \"+operation[0]+\" from \"+val);\n              val = subtract(parseFloat(val), parseFloat(operation[0]));\n            break;\n          case '/':\n              val = divide(parseFloat(val), parseFloat(operation[0]));\n              break;\n          case '*':\n              val = multiply(parseFloat(val), parseFloat(operation[0]));\n              break;\n \n        }\n      \n        lastOp = operation[1];\n      \n\n        \n      \n\n      \n     \n    });\n\n    switch (lastOp) {\n      case '+':\n       val = add(parseFloat(val), parseFloat(this.state.lastNumb));\n        break;\n      case '-':\n          val = subtract(parseFloat(val), parseFloat(this.state.lastNumb));\n        break;\n      case '/':\n          val = divide(parseFloat(val), parseFloat(this.state.lastNumb));\n          break;\n      case '*':\n          val = multiply(parseFloat(val), parseFloat(this.state.lastNumb));\n          break;\n\n    }\n\n    this.setState({...this.state, display:parseFloat(val), lastNumb:val, operations:[]});\n\n    }\n  \n  \n\n  render() {\n\n    return (<div>\n     <Row><Col span={8}>\n   <Row><Col span={2}></Col><Col span={5}> <h2>MEGA-CALC</h2></Col></Row>\n<table><tr><td>\n          <table>\n            <tr>\n              <td colSpan={4}>\n              <div style={lcdStyle}>\n        {this.state.display}\n        </div>\n              </td>\n            </tr>\n            <tr>\n              <td><Button style={buttonStyle} onClick={()=>this.setState({...this.state, display:parseFloat(this.state.lastNumb+'7'), lastNumb:this.state.lastNumb+'7'})}  type=\"primary\">7</Button></td>\n              <td><Button style={buttonStyle} onClick={()=>this.setState({...this.state, display:parseFloat(this.state.lastNumb+'8'),  lastNumb:this.state.lastNumb+'8'})}   type=\"primary\">8</Button></td>\n              <td><Button style={buttonStyle} onClick={()=>this.setState({...this.state, display:parseFloat(this.state.lastNumb+'9'),  lastNumb:this.state.lastNumb+'9'})}   type=\"primary\">9</Button></td>\n              <td><Button style={buttonStyle}  onClick={()=>this.addOperation(this.state.lastNumb,\"/\")}   type=\"primary\">/</Button></td>\n              \n              </tr>\n\n              <tr>\n              <td> <Button style={buttonStyle} onClick={()=>this.setState({...this.state,  display:parseFloat(this.state.lastNumb+'4'), lastNumb:this.state.lastNumb+'4'})}   type=\"primary\">4</Button></td>\n              <td><Button style={buttonStyle}  onClick={()=>this.setState({...this.state, display:parseFloat(this.state.lastNumb+'5'),  lastNumb:this.state.lastNumb+'5'})}  type=\"primary\">5</Button></td>\n              <td><Button style={buttonStyle}  onClick={()=>this.setState({...this.state,  display:parseFloat(this.state.lastNumb+'6'), lastNumb:this.state.lastNumb+'6'})}  type=\"primary\">6</Button></td>\n              <td><Button style={buttonStyle} onClick={()=>this.addOperation(this.state.lastNumb,\"+\")}  type=\"primary\">+</Button></td>\n              \n              </tr>\n\n\n              <tr>\n              <td> <Button style={buttonStyle}  onClick={()=>this.setState({...this.state, display:parseFloat(this.state.lastNumb+'1'),  lastNumb:this.state.lastNumb+'1'})}  type=\"primary\">1</Button></td>\n              <td><Button style={buttonStyle} onClick={()=>this.setState({...this.state, display:parseFloat(this.state.lastNumb+'2'),  lastNumb:this.state.lastNumb+'2'})}   type=\"primary\">2</Button></td>\n              <td><Button style={buttonStyle}  onClick={()=>this.setState({...this.state,  display:parseFloat(this.state.lastNumb+'3'), lastNumb:this.state.lastNumb+'3'})}  type=\"primary\">3</Button></td>\n              <td><Button style={buttonStyle} onClick={()=>this.addOperation(this.state.lastNumb,\"-\")}   type=\"primary\">-</Button></td>\n              \n              </tr>\n              <tr>\n              <td colSpan={3}> <Button style={buttonStyle}   onClick={()=>this.setState({...this.state, display:this.state.lastNumb+'0',  lastNumb:this.state.lastNumb+'0'})}   type=\"primary\">0</Button></td>\n              <td><Button style={buttonStyle} onClick={()=>this.addOperation(this.state.lastNumb,\"*\")}  type=\"primary\">*</Button></td>\n              \n              </tr>\n              <tr>\n              <td colSpan={2}><Button style={buttonStyle}  onClick={()=>this.clearOperations()}  type=\"primary\">C</Button></td>\n              <td colSpan={2}><Button style={buttonStyle} onClick={()=>this.calculateValue()}  type=\"primary\">=</Button></td>\n              \n              \n              </tr>\n\n\n          </table>\n          </td><td>\n          <img style={{'width':'100px'}} src='https://vignette.wikia.nocookie.net/megaman/images/3/30/MM11-MegaMan.png/revision/latest/scale-to-width-down/2000?cb=20190127075055'></img>\n\n          </td>\n          </tr></table>\n          </Col>\n\n          </Row>\n      \n    </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}